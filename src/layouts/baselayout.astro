---
import Head from "../components/root/head.astro";
import Footer from "../components/root/footer.astro";
import AccountUi from "../components/ui/account-ui.astro";
import Modal from "../components/ui/modal.astro";
import "../styles/global.css";
interface Props {
    title: string;
    homelink: string;
    pagename: string;
    textLinks: { label: string; href: string }[];
}
const { title, pagename, homelink, textLinks } = Astro.props;
---

<html lang="ja">
    <Head title=`${pagename}` />
    <body>
        <header>
            <nav class="mobile-menu">
                <Modal position="left" icon="  ☰  ">
                    {
                        textLinks.map((link) => (
                            <a
                                href={link.href}
                                aria-current={
                                    link.href === "/"
                                        ? Astro.url.pathname === "/"
                                            ? "page"
                                            : undefined
                                        : Astro.url.pathname.startsWith(
                                                link.href
                                            )
                                          ? "page"
                                          : undefined
                                }
                                class="modal-inner-content"
                            >
                                {link.label}
                            </a>
                        ))
                    }
                </Modal>
            </nav>
            <h2>
                <a href={homelink}>{title}</a>
            </h2>
            <nav class="links">
                {
                    textLinks.map((link) => (
                        <a
                            href={link.href}
                            aria-current={
                                link.href === "/"
                                    ? Astro.url.pathname === "/"
                                        ? "page"
                                        : undefined
                                    : Astro.url.pathname.startsWith(link.href)
                                      ? "page"
                                      : undefined
                            }
                        >
                            {link.label}
                        </a>
                    ))
                }
            </nav>
            <!-- <AccountUi /> -->
        </header>
        <div class="container">
            <main>
                <slot />
            </main>
        </div>
        <Footer />
    </body>
</html>
<style>
    header {
        margin: 0;
        padding: 0 5%;
        background-color: rgb(var(--base) / 0.85);
        box-shadow: 0px 2px 15px -5px rgb(var(--mauve) / 0.5);
        display: flex;
        justify-content: space-between;
        align-items: center;
        height: 5rem;
        position: sticky;
        top: 0;
        z-index: 100;
        color: rgb(var(--text));
    }

    header > h2 {
        margin: 0;
    }
    header > h2 > a {
        text-decoration: none;
        color: rgb(var(--text));
        margin: 0;
        padding: 0;
        font-size: 1.5rem;
        transition: color 0.2s ease;
    }

    header > h2 > a:hover {
        color: rgb(var(--mauve));
    }

    .links {
        border-radius: 12px;
        border: 1px solid rgb(var(--surface2) / 0.3);
        padding: 4px;
        background-color: rgb(var(--surface0) / 0.3);
        backdrop-filter: blur(10px);
        transition: all 0.2s ease;
    }

    .links:hover {
        border-color: rgb(var(--mauve) / 0.5);
        transform: translateY(-2px);
        box-shadow: 0 4px 12px -2px rgb(var(--mauve) / 0.15);
    }

    nav {
        display: flex;
        gap: 0.5rem;
    }

    nav > a {
        color: rgb(var(--text));
        text-decoration: none;
        margin: 0;
        padding: 0.3rem 1rem;
        border-radius: 8px;
        font-size: 1.1rem;
        display: flex;
        align-items: center;
        transition: all 0.2s ease;
    }

    nav > a:hover:not([aria-current="page"]) {
        background-color: rgb(var(--surface1) / 0.5);
        transform: translateY(-1px);
    }

    .links > a[aria-current="page"] {
        background-color: rgb(var(--mauve));
        color: rgb(var(--base));
    }

    .mobile-menu {
        display: none;
    }

    .modal-inner-content {
        display: flex;
        color: rgb(var(--subtext0));
        backdrop-filter: blur(1px);
        flex-direction: column;
        margin: 8px 0;
        padding: 1rem;
        border-radius: 0.5rem;
        box-shadow: 1px 1px 4px 2px rgb(var(--shadow) / 0.8);
        transition:
            transform 0.2s ease,
            box-shadow 0.2s ease;
        align-items: st retch;
    }
    .modal-inner-content:hover {
        transform: translateY(-2px);
        box-shadow: 0px 0px 4px 3px rgb(var(--mauve) / 0.4);
    }
    /* 現在のページならハイライト */
    /* ボーダーをグラデーションにして光彩が周囲を回っているような雰囲気にする */
    .modal-inner-content[aria-current="page"] {
        box-shadow: 0px 0px 3px 2px rgb(var(--sapphire) / 0.4);
    }

    .modal-inner-content a {
        color: rgb(var(--text));
        text-decoration: none;
        padding: 0.5rem 1rem;
        border-radius: 0.5rem;
        transition:
            background-color 0.2s ease,
            color 0.2s ease;
    }

    .modal-inner-content a:hover {
        background-color: rgb(var(--mauve) / 0.2);
        color: rgb(var(--mauve));
    }
    @media (max-width: 815px) {
        header {
            height: 4rem;
        }
        .mobile-menu {
            display: flex;
        }
        .links {
            display: none;
        }
        header > h2 {
            margin: 0;
        }
        header > h2 > a {
            font-size: 1.2rem;
            padding: 0;
        }
        nav > a {
            font-size: 1rem;
            padding: 0.2rem 0.8rem;
        }
    }
</style>

<style is:global>
    html {
        background-color: rgb(var(--base));
        color: rgb(var(--text));
        font-family: "Inter", sans-serif;
        width: 100%;
        max-width: 100%;
        overflow-x: hidden;
        scroll-behavior: smooth;
        user-select: none;
    }
    body {
        /* display: flex; */
        flex-direction: column;
        min-height: 100vh;
        line-height: 1.6;
    }

    main {
        flex: 1;
        animation: fadeIn 0.5s ease-in;
    }

    @keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(10px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .container {
        max-width: 1000px;
        min-width: 800px;
        margin: 2rem auto;
        padding: 0 1.5rem;
        min-height: 85vh;
        margin-top: 3rem;
    }
    hr {
        display: block;

        margin-block: 1.5em;
        margin-inline: auto;
        border: none;
        height: 1px;
        background: linear-gradient(
            90deg,
            transparent,
            rgb(var(--overlay0) / 0.7),
            transparent
        );
    }

    h1,
    h2,
    h3,
    h4,
    h5,
    h6,
    p,
    a {
        margin: 0;
        padding: 0;
    }
    h1 {
        font-size: 2rem;
        margin-top: 1.5rem;
    }
    h2 {
        font-size: 1.75rem;
        margin-top: 1.25rem;
    }
    h3 {
        font-size: 1.5rem;
        margin-top: 1rem;
        color: rgb(var(--mauve));
    }
    h4,
    h5,
    h6 {
        font-size: 1.25rem;
        margin-top: 0.75rem;
        color: rgb(var(--text));
    }

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        margin-bottom: 0.75rem;
        font-weight: 600;
        transition: color 0.2s ease;
    }

    p {
        margin-block: 0.75rem;
        line-height: 1.8;
    }
    a {
        color: rgb(var(--blue));
        text-decoration: none;
        margin-bottom: 0.5rem;
        transition: all 0.2s ease;
        position: relative;
    }
    a:visited {
        color: rgb(var(--green));
    }
    a:hover {
        color: rgb(var(--sapphire));
        text-decoration: none;
    }

    pre {
        background-color: rgb(var(--mantle));
        border-radius: 0.75rem;
        padding: 1.25rem;
        overflow-x: auto;
        box-shadow: 0 4px 6px rgb(var(--shadow) / 0.1);
        margin: 1.5rem 0;
    }
    code {
        font-family: "Fira Code", monospace;
        font-size: 0.95rem;
        color: rgb(var(--text));
    }

    blockquote {
        margin: 1.5rem 0;
        padding: 1rem 1.5rem;
        border-left: 4px solid rgb(var(--blue));
        background-color: rgb(var(--surface0) / 0.5);
        border-radius: 0 0.5rem 0.5rem 0;
    }

    ul {
        margin: 0.75rem 0 0.75rem 1.5rem;
        padding-left: 1rem;
    }
    li {
        margin: 0.5rem 0;
    }

    table {
        border-collapse: collapse;
        padding: 0 0.5rem;
        width: 100%;
        margin: 1.5rem auto;
        background-color: rgb(var(--surface0) / 0.5);
        border-radius: 0.5rem;
        overflow: hidden;
    }

    th,
    td {
        padding: 0.75rem 1rem;
        text-align: left;
        border-bottom: 1px solid rgb(var(--border) / 0.5);
    }

    th {
        background-color: rgb(var(--surface1));
        font-weight: 600;
    }

    tr:hover {
        background-color: rgb(var(--surface1) / 0.5);
    }

    input,
    select {
        border: 2px solid rgb(var(--border));
        border-radius: 0.5rem;
        padding: 0.75rem 1rem;
        margin: 0 0 0.5rem 0;
        background-color: rgb(var(--surface0));
        color: rgb(var(--text));
        transition: all 0.2s ease;
        -webkit-appearance: none;
        -moz-appearance: none;
    }
    select:hover {
        cursor: pointer;
    }
    input:focus,
    select:focus {
        outline: none;
        border-color: rgb(var(--blue));
        box-shadow: 0 0 0 3px rgb(var(--blue) / 0.2);
    }
    button {
        border: none;
        border-radius: 0.5rem;
        padding: 0.75rem 1.5rem;
        margin: 0.5rem 0;
        background-color: rgb(var(--blue));
        color: rgb(var(--base));
        cursor: pointer;
        transition: all 0.2s ease;
        font-weight: 500;
    }
    button:hover {
        background-color: rgb(var(--sapphire));
        transform: translateY(-1px);
    }
    button:active {
        transform: translateY(0);
    }

    ::selection {
        background-color: rgb(var(--blue) / 0.2);
        color: rgb(var(--text));
    }

    @media (max-width: 815px) {
        th,
        td {
            font-size: 0.9em;
            padding: 1em 0.75em;
        }

        table {
            width: -webkit-fill-available;
        }

        .container {
            min-width: min-content;
            max-width: none;
            margin: 2rem 1rem;
            padding: 0;
            min-height: 85vh;
            margin-top: 3rem;
        }
    }
</style>
