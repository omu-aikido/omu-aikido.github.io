---
import Icon from "../root/Icon.astro";
import "../../styles/global.css";
---

<theme-toggle>
    <button>
        <span style="display:none">Dark theme</span>
        <span class="icon light"></span>
        <span class="icon dark"></span>
    </button>
</theme-toggle>

<style>
    button {
        display: flex;
        border: 0;
        border-radius: 999rem;
        padding: 0;
        background-color: rgb(var(--green));
        box-shadow: inset 0 0 0 1px rgb(var(--overlay1));
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    :global(.theme-dark) button {
        background-color: rgb(var(--surface1));
    }

    .icon {
        z-index: 1;
        position: relative;
        display: flex;
        width: 2rem;
        height: 2rem;
        font-size: 1rem;
        transition: transform 0.3s ease;
    }

    .icon.light::before {
        content: "";
        z-index: -1;
        position: absolute;
        inset: 0;
        background-color: rgb(var(--mantle));
        border: 1px solid rgb(var(--shadow));
        border-radius: 999rem;
        transition:
            transform 0.3s ease,
            background-color 0.3s ease;
    }

    :global(.theme-dark) .icon.light::before {
        content: "";
        z-index: -1;
        position: absolute;
        inset: 0;
        background-color: rgb(var(--green));
        border-radius: 999rem;
    }

    :global(.theme-dark) .icon.light::before {
        transform: translateX(100%);
    }

    @media (prefers-reduced-motion: no-preference) {
        .icon,
        .icon.light::before {
            transition: all 0.3s ease;
        }
    }
</style>

<script>
    class ThemeToggle extends HTMLElement {
        constructor() {
            super();

            const button = this.querySelector("button")!;

            /** Set the theme to dark/light mode. */
            const setTheme = (dark: boolean) => {
                document.documentElement.classList[dark ? "add" : "remove"](
                    "theme-dark"
                );
                button.setAttribute("aria-pressed", String(dark));
            };

            // Toggle the theme when a user clicks the button.
            button.addEventListener("click", () => setTheme(!this.isDark()));

            // Initialize button state to reflect current theme.
            setTheme(this.isDark());
        }

        isDark() {
            return document.documentElement.classList.contains("theme-dark");
        }
    }
    customElements.define("theme-toggle", ThemeToggle);
</script>
